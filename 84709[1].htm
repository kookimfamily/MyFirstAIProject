

<!DOCTYPE html>
<html>
<head>
    <!--Making IE to bump up to latest IE version-->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <!--Based on Message Category load the needed JS files-->
        <script type="text/javascript">
            var g_WebSiteFeatureSettings = {"ReadCSPEnrollmentContext":false,"ReadServerContext":false,"EnableMessageTimeoutFix":true,"AEPEnabled":false};
        </script>
        <script src="/jsout/mcbrowserexpirymessage.js.gz"></script>


</head>
<body>

        <div style="visibility: visible; display: block;">
            <meta charset="UTF-8"><link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800" rel="stylesheet"><link href="https://fonts.googleapis.com/css?family=Poppins:300,400,600,700" rel="stylesheet"><style>    html,    body,    div,    span,    p,    blockquote,    a,    table,    tbody,    thead,    tr,    th,    td,    h1,    h2,    h3,    h4,    li {        margin: 0;        padding: 0;        border: 0;        font-family: "Open Sans", sans-serif;        vertical-align: top;    }    body {        font-size: 1rem;    }    a {        color: inherit;        text-decoration: none !important;    }    html {        box-sizing: border-box;    }    *,    *:before,    *:after {        box-sizing: inherit;    }    .main-wrapper {        height: 322px;        width: 536px;        background: #ffffff;        position: relative;    }    #close {        width: 32px;        float: right;        position: absolute;        right: 0;        margin: 5px;        z-index: 1;        cursor: pointer;    }    .main-box {        display: flex;    }    .image-box {        padding: 0;    }    /***************** TEXT BOX SECTION ******************************/    .text-box {        padding: 24px 20px 20px 30px;    }    .headline {        font-size: 17px;        line-height: 1em;        margin: 0;    }    .text--sb {        font-family: "Open Sans", sans-serif;        font-style: normal;        font-weight: normal;        font-size: 16px;        line-height: 24px;        letter-spacing: -0.015em;        color: #212934;        width: 295px;        margin: 24px 0;    }    .button-box {        margin: 8px 0 0;        display: flex;        flex-flow: column;        justify-content: space-between;        width: 295px;    }    .btn-primary {        letter-spacing: -0.01em;        box-sizing: border-box;        border-radius: 4px;        color: #fff;        height: 40px;        flex-grow: 1;        text-align: center;        background: #e01919;        font-size: 15px;        font-weight: bold;        line-height: 40px;    }    .btn-primary:hover {        background-color: #ff0000;    }    .super-header {        color: #53565a;        font-style: normal;        font-weight: 600;        font-size: 14px;        line-height: 16px;        display: flex;        align-items: flex-end;        text-transform: uppercase;    }    hr {        background: #b1babf;        opacity: 0.75;        border: 1px solid #888;        box-sizing: border-box;        margin-right: 30px;    }    /***************** FOOTER SECTION ******************************/    .mcafee-logo {        width: 7em;        position: absolute;        bottom: 35px;        left: 45px;    }    .valign-mid {        vertical-align: middle;    }    .header {        font-family: Poppins, "Open Sans", sans-serif;        letter-spacing: -0.01em;        font-size: 23px;        line-height: 32px;        color: #333333;        font-weight: bold;        margin: 10px 0 20px;        color: #333333;    }    .header span {        display: block;    }    .footer-disclaimer {        font-family: "Open Sans", sans-serif;        font-style: normal;        font-weight: normal;        font-size: 11px;        line-height: 16px;        color: #4a4f5d;        width: 295px;        margin: 8px auto 0;        text-align: center;    }    #recommend-section {        display: none;    }    #recommend-section {        font-style: italic;        font-weight: normal;        font-size: 12px;        line-height: 12px;        text-align: right;        color: #ffffff;        text-align: center;        position: absolute;        bottom: 25px;        left: 35px;        z-index: 9999;    }    .footer__recommend {}</style><script>    window.addEventListener("load", function () { var logo = document.getElementById("aff-logo"); var recommendSection = document.getElementById("recommend-section"); var affiliates = { dell: { logoUrl: "https://www.mcafee.com/content/dam/global/partner-logo/svg/Dell.svg", height: "32", width: "32" }, lenovo: { logoUrl: "https://www.mcafee.com/content/dam/global/partner-logo/svg/Lenovo.svg", height: "35", width: "70" }, acer: { logoUrl: "https://www.mcafee.com/content/dam/global/partner-logo/svg/Acer.svg", height: "35", width: "70" }, asus: { logoUrl: "https://www.mcafee.com/content/dam/global/partner-logo/svg/ASUS.svg", height: "36", width: "70" }, hp: { logoUrl: "https://www.mcafee.com/content/dam/global/partner-logo/svg/HP.svg", height: "32", width: "32" }, }; if (TemplateContext) { if (TemplateContext.affiliate_id) { var getAffName = function (affid) { switch (affid) { case "105": case "826": case "977": case "1441": return "dell"; break; case "714": case "1242": return "lenovo"; break; case "662": return "acer"; break; case "885": case "1226": return "asus"; break; case "532": case "1348": return "samsung"; break; case "1140": return "medion"; break; case "642": case "1214": case "1377": return "toshiba"; break; case "1067": case "1081": case "1330": case "1357": case "1359": case "1439": return "hp"; break; } }; var affName = getAffName(TemplateContext.affiliate_id); if (affName) { var setLogo = function (aff) { if (affiliates.hasOwnProperty(aff)) { logo.src = affiliates[aff].logoUrl; logo.width = affiliates[aff].width; logo.height = affiliates[aff].height; logo.style.display = "inline"; recommendSection.style.display = "block"; } }; setLogo(affName); } } } });</script><div class="main-wrapper"> <img src="https://www.mcafee.com/content/dam/ngm/dell-msms-ngm-assets/gray_close_X.svg" alt="close" id="close">    <div class="main-box">        <div class="image-box"> <img src="https://www.mcafee.com/content/dam/ngm/2021-test/ngm_hero_warning.png" height="322px" width="176px" alt="">            <div id="recommend-section"> <img style="display: block; margin: 10px auto;" width="32" height="32" class="valign-mid" id="aff-logo" src=""> <span class="footer__recommend valign-mid">에서 추천합니다.                </span> <br> </div>        </div>        <div class="text-box">            <div class="headline">                <p class="super-header">만료 경고</p>                <hr>                <p class="header">안티바이러스 보호 기능이<span style="color: #c01818;">만료되었습니다</span></p>                <p class="text--sb">안티바이러스 보호 기능과 안전한 VPN 연결, 비밀번호 관리자로 장치를 보호하십시오.</p>                <div class="button-box"> <a class="btn btn-primary" id="buy" href="#">보호 활성화</a>                    <div class="footer-disclaimer">                        <p>*1 년 구독 – 무제한 기기 보호</p>                    </div>                </div>            </div>        </div>    </div></div>
        </div>
        <script type="text/javascript">
            var TemplateContext = {"affiliate_id":"1348","expiry_date":"20200328","is_trial":"true","oem_manufacturer":"SAMSUNG ELECTRONICS CO., LTD.","oem_model":"750XBE/730XBE","extended_expiry_date":"20200626","installed_date":"20200128","client_time_zone":"대한민국 표준시","culture":"KO-KR","expiry_period":"PostExpiry","campaign_end_date":"","affiliate_name":"SAMSUNG PC","segment_end_date":"","system_physical_memory":"8083 MB","days_to_expiry":"","days_from_expiry":"1371","days_from_extended_expiry":"1281","extended_expiry_day":"","local_date_time":"12/29/2023 19:19:58","pkg_id":"431","segment_id":"8","segment_type_id":"1","segment_type_config_id":"60","eula_accept_date":"20200128","user_initiated_scan_count":"0","quick_scan_count":"0","app_launch_count":"6","scheduled_scan_count":"0","client_id":"1a1e345db5864f9b9e976083d329223a-b113e0a601c5","message_id":"6b1d2405-a98e-4521-b831-36c272186990"};
            TemplateContextData.init(TemplateContext);
        </script>
    <script type="text/javascript">
        function computeMessageSize() {
            var messageSize = {
                width: 536,
                height: 322
                };

            return messageSize;
        }

        var messageSize = computeMessageSize();
        var screenResolution = UIUtils.getScreenResolution();
        var actualDpi = UIUtils.getActualScreenDpiPercentage();
        /* Please don't rename or remove the utag_data variable as this is required for tealium tracking. */
        var utag_data = {};
        var messageMetadata = new Object();
        messageMetadata.clientId = '1a1e345db5864f9b9e976083d329223a-b113e0a601c5';
        messageMetadata.sessionId = '2BE8D562-AC4B-4DAB-9662-4CE0E8E69020';
        messageMetadata.osType = 'windows';
        messageMetadata.osVersion = '10.0.0.64';
        messageMetadata.messageId = '6b1d2405-a98e-4521-b831-36c272186990';
        messageMetadata.messageName = 'ATP_APAC_nonHP_AtRisk_Resize';
        messageMetadata.segmentId = '1680';
        messageMetadata.segmentName = 'DB-APAC_ATP_SamsungPC_Reduced';
        messageMetadata.experimentId = '13576';
        messageMetadata.experimentName = 'ATP_APAC_nonHP_AtRisk_Resize';
        messageMetadata.cohortId = '0';
        messageMetadata.CohortAllocationDate = '';
        messageMetadata.cohortName = '';
        messageMetadata.culture = 'KO-KR';
        messageMetadata.appId = 'eb8e0511-f15f-4b76-93c5-d7363ef0851d';
        messageMetadata.isIpt = 0;
        messageMetadata.affiliateId = ClientDataReader.affiliateId();
        messageMetadata.buyLinkName = 'substlink:buyfromalert';
        messageMetadata.renewLinkName = 'substlink:renewfromalert';
        messageMetadata.isReboot = 'False';
        messageMetadata.campaignId = '0';
        messageMetadata.renewSource = 'ngm';
        messageMetadata.category = 'AtRiskProductExpiry';
        messageMetadata.mboxId = '';
        messageMetadata.mboxEnabled = 'False';
        //messageMetadata.clickSource = McBrowserExpiryMessage.getClickSource(messageMetadata.category, false, false);
        messageMetadata.clickSource = 'ngmalert';
        messageMetadata.renewalTrackingUrl = 'https://consroute.mcafee.com/app';
        messageMetadata.serverEpochTimeStamp = 1703845198.8930392;
        messageMetadata.messageHistoryMaxRetryCount = 5;
        messageMetadata.messageHistoryRetryInterval = 5000;
        messageMetadata.messageHistoryTrackOnlyForMessagesWithPolicy = 'False';
        messageMetadata.timeToCloseWindow = 1800000;
        messageMetadata.sendTelemetryUsingAnalyticsSdk = Utils.isValidValue(g_WebSiteFeatureSettings)
            && Utils.isValidValue(g_WebSiteFeatureSettings.SendAllTelemetryToAnalyticsSdk) ?
            g_WebSiteFeatureSettings.SendAllTelemetryToAnalyticsSdk.toString() : 'false';
        messageMetadata.sendExceptionsUsingAnalyticsSdk = Utils.isValidValue(g_WebSiteFeatureSettings)
            && Utils.isValidValue(g_WebSiteFeatureSettings.SendJSExceptionsToAnalyticsSdk) ?
            g_WebSiteFeatureSettings.SendJSExceptionsToAnalyticsSdk.toString() : 'true';
        messageMetadata.wssVersion = '150.2';
        messageMetadata.accountId = ClientDataReader.accountId();
        messageMetadata.productKey = ClientDataReader.productKey();
        messageMetadata.softwareId = ClientDataReader.softwareId();
        messageMetadata.hardwareId = ClientDataReader.hardwareId();
        messageMetadata.hasMessagePolicy = 'True';
        messageMetadata.historyUrl = '/api/MessageHistory';
        messageMetadata.originalMessageWidth = 536;
        messageMetadata.originalMessageHeight = 322;
        messageMetadata.messageWidth = messageSize.width;
        messageMetadata.messageHeight = messageSize.height;
        messageMetadata.screenWidth = screenResolution.width;
        messageMetadata.screenHeight = screenResolution.height;
        messageMetadata.dpiX = actualDpi.horizontal;
        messageMetadata.dpiY = actualDpi.vertical;
        messageMetadata.isResponsive = false;
        messageMetadata.coreUiIptMinWssVersion = '150.4';
        messageMetadata.pageName='ProductExpiryMcBrowser';
        messageMetadata.tealiumServerUrl ='https://messages.mcafee.com/Scripts/Common/Tealium/mcafee/consumer-atp/prod/utag.js';
        messageMetadata.mipEnrollmentStatus ='';
        messageMetadata.tealiumTrackingEnabled = 'True';
        messageMetadata.tealiumImpressionTrackingEnabled = 'False';
        messageMetadata.tealiumActionTrackingEnabled = 'True';
        messageMetadata.templateName = 'Blank Html Template';
        messageMetadata.isRegistered = 'False';
        messageMetadata.ram = '8083 MB';
        messageMetadata.daysToExpiry = '-1';
        messageMetadata.daysFromExtendedExpiry = '1281';
        messageMetadata.daysFromExpiry = '1371';
        messageMetadata.expiryPeriod = 'PostExpiry';
        messageMetadata.extendedExpiryDay = '-1';
        messageMetadata.enrollDateUtc =  '';
        messageMetadata.subscriptionType = 'Trial';
        messageMetadata.autoRenewalFlag = '';
        messageMetadata.country = 'KR';
        messageMetadata.state = 'Gyeonggi-do';
        messageMetadata.city = 'Seongnam-si';
        messageMetadata.messageViewer = 'ngmviewer';
        messageMetadata.transactionSource = '';
        messageMetadata.isServerSideGenAppEvent = 'True';
        messageMetadata.transType =  '';
        var timeout = 28800000;
        messageMetadata.FlexPackageId = ClientDataReader.flexPkgId();
        messageMetadata.sku = '1348-22-49192';
        messageMetadata.consrouteRedirectEnabled = 'True';
        messageMetadata.telemetryData = {};
        messageMetadata.territoryEnabled = 'True';
        messageMetadata.territoryCulture = 'KO-KR';
        messageMetadata.territoryId = '25';
        messageMetadata.requiredMessageToScreenRatio = 30;
        messageMetadata.isMessageResizeEnabled = 'True'
        messageMetadata.enableEventsTrackingToCSPSdk = 'False';
        messageMetadata.clientErrorLogUrl = '/logs';
        messageMetadata.enableALBLogs = 'True';
        messageMetadata.ShowMessageOnceInLifeTime='False';
        messageMetadata.BuildNumber='1800500165';
        messageMetadata.deviceId = 'eb24ad81-a3c3-4882-9c72-d697a2504ef1';
        //Bind events after DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            if (messageMetadata.mboxEnabled === 'True')
            {
                if(typeof ttMETA != "undefined" && ttMETA!=null){
                    var mboxObj=null;
                    for (var i = 0; i < ttMETA.length; i++) {
                        if (ttMETA[i].mbox === messageMetadata.mboxId) {
                            mboxObj =  ttMETA[i];
                            break;
                        }
                    }
                    var mboxId = messageMetadata.mboxId.split(' ').join('');
                    if(mboxObj && mboxObj.experience){
                        //messageMetadata.clickSource = McBrowserExpiryMessage.getClickSource(messageMetadata.category, false, true);
                        messageMetadata.clickSource = 'ngmalert';
                        var experience = mboxObj.experience.split(' ').join('');
                        messageMetadata.mboxId = mboxId + "-" + experience;
                    }
                    else
                        messageMetadata.mboxId = mboxId + "-ERROR_MBOX_NOT_DEFINED";
                }
                else
                    messageMetadata.mboxId = messageMetadata.mboxId + "-ERROR";
            }
            else
                messageMetadata.mboxId = '';

            McBrowserMsgBusSupport.init();

            CloudLog.init(messageMetadata);
            MessageHistory.init(messageMetadata);
            McBrowserExpiryMessage.init(messageMetadata);
            McBrowserTelemetry.init(messageMetadata);
            TealiumTracking.init(messageMetadata);
            DOMManipulation.setRTL(messageMetadata.culture);
            DOMManipulation.updatePlaceHolders();

            if (messageMetadata.enableALBLogs.toLowerCase() == 'true') {
                var messageContext = new Object(), config = new Object();
                messageContext.sessionId = messageMetadata.sessionId;
                messageContext.clientId = messageMetadata.clientId;
                messageContext.messageId = messageMetadata.messageId;
                config.clientErrorLogUrl = messageMetadata.clientErrorLogUrl;
                messageContext.applicationId = 'A053060C-3A34-11E4-8A01-005056B7244F';
                config.enableALBLogs = messageMetadata.enableALBLogs;
                CloudLogV2.init(messageContext, config);
            }
        });

        //Once document is loaded completely, show the container
        window.onload = function() {
            var messageWrapperDiv = document.getElementsByTagName("div");
            if(messageMetadata.isMessageResizeEnabled === 'True'
                && messageMetadata.isResponsive === false
                && 'False' === 'False'
                && typeof messageWrapperDiv !== 'undefined'
                && messageWrapperDiv !== null
                && messageWrapperDiv.length > 0
             )
            {
				// Find the wrraper div element
                var firstDivElement = messageWrapperDiv[0];
                UIUtils.getMessageResize(firstDivElement, messageSize, messageMetadata.requiredMessageToScreenRatio);
                messageMetadata.messageWidth = messageSize.width;
                messageMetadata.messageHeight = messageSize.height;

            }

            // Collect potentially time consuming data before showing a message
            McBrowserTelemetry.collectData();
            SmContainer.showWindow(messageSize.width, messageSize.height, 1,1);
            //Save telemetry and message history after loading the message
            TealiumTracking.trackImpression();
            McBrowserTelemetry.storeDisplay();
            MessageHistory.saveDisplay();
            ContainerTimer.setMessageTimeOut(timeout, McBrowserExpiryMessage.onTimeOut);
        };
        (function(a,b,c,d){
            try{

                a = messageMetadata.tealiumServerUrl;
                b=document;c='script';d=b.createElement(c);d.src=a;d.type='text/java'+c;d.async=true;
                a=b.getElementsByTagName(c)[0];a.parentNode.insertBefore(d,a);
            }catch(e){}

        })();

    </script>
</body>
</html>
